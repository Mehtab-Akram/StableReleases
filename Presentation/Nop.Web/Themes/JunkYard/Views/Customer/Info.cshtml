@using Nop.Core
@model CustomerInfoModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-customer-info-page");
}

@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Info })
}

@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript" asp-location="Footer">
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}
<div class="right_product_content">
    <h3>@T("Account.MyAccount") - @T("Account.CustomerInfo")</h3>
        <div class=" card text-center m-0 p-0  col-md-8">
    <div class="form_container">

            <h5 class="card-header dark-color white-text text-center py-4">@T("Account.YourPersonalDetails")</h5>
    <form asp-route="CustomerInfo" method="post">
        <div asp-validation-summary="ModelOnly" class="message-error"></div>





            @if (Model.GenderEnabled)
            {
                <div class="form-group py-2">
                    <label for="email" class="control-label">@T("Account.Fields.Gender"):</label>
                    <br>
                    <div class="custom-control custom-radio custom-control-inline">
                        <label class="custom-check-label" for="GenderMale">
                            <input type="radio" asp-for="Gender" checked="@(Model.Gender == "M")" class=" form-check-input" value="M" id="gender-male" />
                            @T("Account.Fields.Gender.Male")
                        </label>
                    </div>
                    <div class="custom-control custom-radio custom-control-inline">
                        <label class="custom-check-label" for="GenderFemale">
                            <input type="radio" asp-for="Gender" checked="@(Model.Gender == "F")" class=" form-check-input" value="F" id="gender-female" name="Gender" />
                            @T("Account.Fields.Gender.Female")
                        </label>
                    </div>

                </div>
            }
            <div class="form-group py-2">
                <label asp-for="FirstName" asp-postfix=":"></label><span class="starMark"><nop-required /></span>
                <input asp-for="FirstName" type="text" name="FirstName" id="FirstName" required />
                <span class="clsRequiredMsg" asp-validation-for="FirstName"></span>
            </div>
            <div class="form-group py-2">
                <label asp-for="LastName" asp-postfix=":"></label><span class="starMark"><nop-required /></span>
                <input asp-for="LastName" type="text" name="LastName" id="LastName" required />
                <span class="clsRequiredMsg" asp-validation-for="LastName"></span>
            </div>
            @if (Model.DateOfBirthEnabled)
            {

                <div class="form-group py-2">
                    <label>
                        @T("Account.Fields.DateOfBirth"):<span class="starMark">
                            @if (Model.DateOfBirthRequired)
                            {
                                <nop-required />
                            }
                        </span>
                    </label>

                    <nop-date-picker asp-day-name="@Html.NameFor(x => x.DateOfBirthDay)"
                                     asp-month-name="@Html.NameFor(x => x.DateOfBirthMonth)"
                                     asp-year-name="@Html.NameFor(x => x.DateOfBirthYear)"
                                     asp-begin-year="@(DateTime.Now.Year - 110)"
                                     asp-end-year="@(DateTime.Now.Year)"
                                     asp-selected-day="@Model.DateOfBirthDay"
                                     asp-selected-month="@Model.DateOfBirthMonth"
                                     asp-selected-year="@Model.DateOfBirthYear" />

                    <span class="clsRequiredMsg" asp-validation-for="DateOfBirthDay"></span>
                    <span class="clsRequiredMsg" asp-validation-for="DateOfBirthMonth"></span>
                    <span class="clsRequiredMsg" asp-validation-for="DateOfBirthYear"></span>

                </div>
            }

            <div class="form-group py-2">
                <label asp-for="Email" asp-postfix=":"></label><span class='starMark'><nop-required /></span>
                <input asp-for="Email" />

                <span class="clsRequiredMsg" asp-validation-for="Email"></span>
                @*<label for="email">Email Address<span class="starMark">*</span></label>
                    <input type="email" name="email" id="email" required />*@
            </div>
            @if (!string.IsNullOrEmpty(Model.EmailToRevalidate))
            {
                <div class="form-group py-2">
                    <label asp-for="EmailToRevalidate"></label>
                    <span class="email-to-revalidate">@Model.EmailToRevalidate</span>
                    <span class="email-to-revalidate-note">
                        <em>@T("Account.Fields.EmailToRevalidate.Note")</em>
                    </span>
                </div>
            }
            @if (Model.UsernamesEnabled)
            {
                if (Model.AllowUsersToChangeUsernames)
                {
                    <div class="form-group py-2">
                        <label asp-for="Username" asp-postfix=":"></label>
                        <input asp-for="Username" />
                        <nop-required />
                        <span class="clsRequiredMsg" asp-validation-for="Username"></span>
                        @if (Model.CheckUsernameAvailabilityEnabled)
                        {
                            @await Html.PartialAsync("_CheckUsernameAvailability")
                        }
                    </div>
                }
                else
                {
                    <div class="inputs">
                        <label asp-for="Username" asp-postfix=":"></label>
                        <span class="readonly-username">@Model.Username</span>
                    </div>
                }
            }

            @if (Model.CompanyEnabled || Model.DisplayVatNumber)
            {

                <h5 class=" card-header dark-color white-text text-center py-4">@T("Account.CompanyDetails")</h5>


                @if (Model.CompanyEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="Company" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.CompanyRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="Company" />
                        @*@if (Model.CompanyRequired)
                                {
                                 <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="Company"></span>
                    </div>
                }
                @if (Model.DisplayVatNumber)
                {
                    <div class="form-group py-2">
                        <label asp-for="VatNumber" asp-postfix=":"></label>
                        <input asp-for="VatNumber" />
                        <span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
                    </div>
                }
                @*<label for="email">Company Name</label>
                    <input type="text" name="Company" id="Company" required />*@

            }
            @if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
            {
                <div class="fieldset">
                    <div class="title">
                        <h5 class=" card-header dark-color white-text text-center py-4">@T("Account.Options")</h5>
                    </div>
                    <div class="form-fields">
                        @if (Model.NewsletterEnabled)
                        {
                            <div class="form-group py-2">
                                <label asp-for="Newsletter" asp-postfix=":">
                                </label>
                                <input asp-for="Newsletter" />
                                <span class="clsRequiredMsg" asp-validation-for="Newsletter"></span>
                            </div>
                        }
                        @if (Model.CustomerAttributes.Count > 0)
                        {
                            @await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes)
                        }
                    </div>
                </div>
                @*<h5>Options</h5>
                    <div class="form-group py-2">
                        <label for="email" class="control-label">Newsletter </label>
                        <div class="custom-control custom-radio custom-control-inline">
                            <label class="custom-check-label" for="GenderMale">
                                <input type="checkbox" class=" form-check-input" value="1" name="NewsLetter" checked>

                            </label>
                        </div>
                    </div>*@
            }
            @if (Model.StreetAddressEnabled || Model.StreetAddress2Enabled || Model.ZipPostalCodeEnabled
|| Model.CityEnabled || Model.CountryEnabled)
            {
                <h5 class="card-header dark-color white-text text-center py-4">@T("Account.YourAddress")</h5>
                @if (Model.StreetAddressEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="StreetAddress" asp-postfix=":"></label>
                        <span class='starMark'>
                            @if (Model.StreetAddressRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="StreetAddress" />
                        @*@if (Model.StreetAddressRequired)
                            {
                                <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="StreetAddress"></span>
                    </div>
                }
                @if (Model.StreetAddress2Enabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="StreetAddress2" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.StreetAddress2Required)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="StreetAddress2" />
                        @*@if (Model.StreetAddress2Required)
                                {
                                                                    <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="StreetAddress2"></span>
                    </div>
                }
                @if (Model.ZipPostalCodeEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="ZipPostalCode" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.ZipPostalCodeRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="ZipPostalCode" />
                        @*@if (Model.ZipPostalCodeRequired)
                                {
                                                                    <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="ZipPostalCode"></span>
                    </div>
                }
                @if (Model.CityEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="City" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.CityRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="City" />
                        @*@if (Model.CityRequired)
                            {
                                <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="City"></span>
                    </div>
                }
                @if (Model.CountryEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="CountryId" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.CountryRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <select asp-for="CountryId" asp-items="Model.AvailableCountries"></select>
                        @*@if (Model.CountryRequired)
                            {
                                <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="CountryId"></span>
                    </div>
                }
                @if (Model.CountryEnabled && Model.StateProvinceEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="StateProvinceId" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.StateProvinceRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
                        @*@if (Model.StateProvinceRequired)
                            {
                                <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="StateProvinceId"></span>
                        <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                    </div>
                }
            }
            @if (Model.PhoneEnabled || Model.FaxEnabled)
            {
                <h5 class="card-header dark-color white-text text-center py-4">@T("Account.YourContactInformation")</h5>
                @if (Model.PhoneEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="Phone" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.PhoneRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="Phone" />
                        @*@if(Model.PhoneRequired)
                            {
                                <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="Phone"></span>
                    </div>
                }
                @if (Model.FaxEnabled)
                {
                    <div class="form-group py-2">
                        <label asp-for="Fax" asp-postfix=":"></label><span class='starMark'>
                            @if (Model.FaxRequired)
                            {
                                <nop-required />
                            }
                        </span>
                        <input asp-for="Fax" />
                        @*@if (Model.FaxRequired)
                            {
                                <nop-required />
                            }*@
                        <span class="clsRequiredMsg" asp-validation-for="Fax"></span>
                    </div>
                }
                @if (Model.AllowCustomersToSetTimeZone || Model.SignatureEnabled)
                {
                    <h5 class=" card-header dark-color white-text text-center py-4">@T("Account.Preferences")</h5>

                    <div class="form-group py-2">
                        @if (Model.AllowCustomersToSetTimeZone)
                        {
                            <label asp-for="TimeZoneId" asp-postfix=":"></label>
                            <select asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones"></select>
                            <span asp-validation-for="TimeZoneId"></span>
                        }
                        @if (Model.SignatureEnabled)
                        {
                            <label asp-for="Signature" asp-postfix=":"></label>
                            <textarea asp-for="Signature" class="account-signature-text"></textarea>
                        }
                    </div>
                }
                @if (Model.NumberOfExternalAuthenticationProviders > 0)
                {
                            <h5 class="card-header dark-color white-text text-center py-4">@T("Account.AssociatedExternalAuth")</h5>
                    <div class="fieldset">
                       
                        @if (Model.AssociatedExternalAuthRecords.Count > 0)
                        {
                            //existing associated external records
                            <div class="table-wrapper">
                                <table class="data-table">
                                    <colgroup>
                                        <col />
                                        <col />
                                        <col />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th class="auth-method-name">
                                                @T("Account.AssociatedExternalAuth.AuthMethodName")
                                            </th>
                                            <th class="email">
                                                @T("Account.AssociatedExternalAuth.Email")
                                            </th>
                                            <th class="external-id">
                                                @T("Account.AssociatedExternalAuth.ExternalIdentifier")
                                            </th>
                                            @if (Model.AllowCustomersToRemoveAssociations)
                                            {
                                                <th class="remove">
                                                    @T("Account.AssociatedExternalAuth.Remove")
                                                </th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.AssociatedExternalAuthRecords)
                                        {
                                            <tr>
                                                <td class="auth-method-name">
                                                    @item.AuthMethodName
                                                </td>
                                                <td class="email">
                                                    @item.Email
                                                </td>
                                                <td class="external-id">
                                                    @CommonHelper.EnsureMaximumLength(item.ExternalIdentifier, 40, "...")
                                                </td>
                                                @if (Model.AllowCustomersToRemoveAssociations)
                                                {
                                                    <td class="remove">
                                                        <a href="#" onclick="return removeexternalassociation(@item.Id)">@T("Account.AssociatedExternalAuth.Remove")</a>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        @if (Model.NumberOfExternalAuthenticationProviders > Model.AssociatedExternalAuthRecords.Count)
                        {
                            //we can add more external records
                            <div class="form-fields add-more-external-records">
                                @T("Account.AssociatedExternalAuth.AddMoreRecords")
                                <a href="@Url.RouteUrl("Login", null, "http")">
                                    @Url.RouteUrl("Login", null, "http")
                                </a>
                            </div>
                        }
                    </div>
                }
            }
                <div class="buttons">
                    <button type="submit" value="@T("Common.Save")" name="save-info-button" class="Normalbutton button-1 save-customer-info-button">@T("Common.Save")</button>
                </div>
    </form>
        </div>
    </div>
    
</div>


<script type="text/javascript" asp-location="Footer">
    function removeexternalassociation(itemId) {
        if (confirm('@T("Common.AreYouSure")')) {
            var postData = {
                id: itemId
            };
            addAntiForgeryToken(postData);
            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.Action("RemoveExternalAssociation", "Customer")',
                data: postData,
                dataType: 'json',
                success: function (data) {
                    location.href = data.redirect;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to delete');
                }
            });
        }
        return false;
    }
</script>