@model OrderTotalsModel


<p class="product_subtotal">
    @T("ShoppingCart.Totals.SubTotal"):
    <span class="product_price">@Model.SubTotal</span>
</p>
@if (!string.IsNullOrEmpty(Model.SubTotalDiscount))
{
    <p class="order-subtotal-discount">
        @T("ShoppingCart.Totals.SubTotalDiscount"):
        <span class="product_price">@Model.SubTotalDiscount</span>
    </p>
}
@if (!Model.HideShippingTotal)
{
    <p class="shipping_rate">
        @T("ShoppingCart.Totals.Shipping"):
        @if (Model.RequiresShipping && !string.IsNullOrEmpty(Model.SelectedShippingMethod))
        {
            <span class="shipping_price">@T("ShoppingCart.Totals.Shipping.Method", Model.SelectedShippingMethod)</span>
        }
        @if (Model.RequiresShipping)
        {
            if (!string.IsNullOrEmpty(Model.Shipping))
            {
                <span class="shipping_price">@Model.Shipping</span>
            }
            else
            {
                <span class="shipping_price">@T("ShoppingCart.Totals.CalculatedDuringCheckout")</span>
            }
        }
        else
        {
            <span class="shipping_price">@T("ShoppingCart.Totals.Shipping.NotRequired")</span>
        }
    </p>


}
@if (!string.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
{
    <p class="shipping_price">
        @T("ShoppingCart.Totals.PaymentMethodAdditionalFee"):
        <span class="shipping_price">@Model.PaymentMethodAdditionalFee</span>
    </p>
}
@if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
{
    foreach (var taxRate in Model.TaxRates)
    {
        <p class="shipping_price">
            @string.Format(T("ShoppingCart.Totals.TaxRateLine").Text, taxRate.Rate):
            <span class="total_price">@taxRate.Value</span>
        </p>
    }
}
@if (Model.DisplayTax)
{
    <p class="total_amount">
        @T("ShoppingCart.Totals.Tax"):
        <span class="total_price">@Model.Tax</span>
    </p>
}
@if (!string.IsNullOrEmpty(Model.OrderTotalDiscount))
{
    <p class="total_amount">
        @T("ShoppingCart.Totals.OrderTotalDiscount"):
        <span class="total_price">@Model.OrderTotalDiscount</span>
    </p>
}
@if (Model.GiftCards.Count > 0)
{
    foreach (var gc in Model.GiftCards)
    {
        <p class="giftcard-summary">
            @T("ShoppingCart.Totals.GiftCardInfo"):
            <span>@T("ShoppingCart.Totals.GiftCardInfo.Code", gc.CouponCode)</span>
            @if (Model.IsEditable)
            {
                //little hack here with empty "value" element
                <button type="submit" name="removegiftcard-@gc.Id" value=" " title="@T("Common.Remove")" class="btn remove-gift-card-button">
                    X
                </button>
            }
            <span class="total_price-remaining">@string.Format(T("ShoppingCart.Totals.GiftCardInfo.Remaining").Text, gc.Remaining)</span>
            <span class="total_price">@gc.Amount</span>
        </p>
    }
}
@if (Model.RedeemedRewardPoints > 0)
{
    <p class="total_amount">
        @string.Format(T("ShoppingCart.Totals.RewardPoints").Text, Model.RedeemedRewardPoints):

        <span class="total_price">@Model.RedeemedRewardPointsAmount</span>

    </p>
}
<p class="total_amount">
    @T("ShoppingCart.Totals.OrderTotal"):

    @if (!string.IsNullOrEmpty(Model.OrderTotal))
    {
        <span class="total_price"><strong>@Model.OrderTotal</strong></span>
    }
    else
    {
        <span class="total_price">@T("ShoppingCart.Totals.CalculatedDuringCheckout")</span>
    }

</p>
@if (Model.WillEarnRewardPoints > 0)
{
    <p class="total_amount">
        @T("ShoppingCart.Totals.RewardPoints.WillEarn"):
        <span class="total_price">@string.Format(T("ShoppingCart.Totals.RewardPoints.WillEarn.Point").Text, Model.WillEarnRewardPoints)</span>
    </p>
}
