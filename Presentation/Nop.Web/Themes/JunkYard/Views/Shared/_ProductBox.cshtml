@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="col-md-4" data-productid="@Model.Id">
    <div class="product_card">
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
            <img class=" card-img-top" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
        </a>
        <div class="card-body">
            <p class="card-text">
                <span class="price">@Model.ProductPrice.Price</span>
                @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="prevPrice">@Model.ProductPrice.OldPrice</span>
                }
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
                @if (!string.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                {
                    <div class="base-price-pangv">
                        @Model.ProductPrice.BasePricePAngV
                    </div>
                }

            </p>
            <strong class="product-name-box"><a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a></strong>
            @if (catalogSettings.ShowSkuOnCatalogPages && !string.IsNullOrEmpty(Model.Sku))
            {
                <div class="review_text">
                    @Model.Sku
                </div>
            }
            <div class="description">
                @Html.Raw(Model.ShortDescription)
            </div>
            @await Component.InvokeAsync("Widget", new { widgetZone = "productbox_addinfo_middle", additionalData = Model.Id })
            @if (!Model.ProductPrice.DisableBuyButton)
            {
                var addToCartText = T("ShoppingCart.AddToCart").Text;
                if (Model.ProductPrice.IsRental)
                {
                    addToCartText = T("ShoppingCart.Rent").Text;
                }
                if (Model.ProductPrice.AvailableForPreOrder)
                {
                    addToCartText = T("ShoppingCart.PreOrder").Text;
                }
                <a type="button" class="btn addToCart link" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;"> <span class="lnr lnr-cart"></span> @(addToCartText)</a>
            }

            <div class="add-info">
                @await Component.InvokeAsync("Widget", new { widgetZone = "productbox_addinfo_before", additionalData = Model.Id })
                

                @await Component.InvokeAsync("Widget", new { widgetZone = "productbox_addinfo_after", additionalData = Model.Id })
            </div>
            @if (Model.ReviewOverviewModel.AllowCustomerReviews)
            {
                var ratingPercent = 0;
                if (Model.ReviewOverviewModel.TotalReviews != 0)
                {
                    ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                }
            <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                <div class="rating">
                    <div style="width: @(ratingPercent)%">
                    </div>
                </div>
                <div class="review_text">@Model.ReviewOverviewModel.TotalReviews reviews</div>
            </div>
            }
            @*<div class="review">
                <div class="review_star">
                    <span class="lnr lnr-star"></span>
                    <span class="lnr lnr-star"></span>
                    <span class="lnr lnr-star"></span>
                    <span class="lnr lnr-star"></span>
                    <span class="lnr lnr-star"></span>
                </div>
                <div class="review_text">4 reviews</div>
            </div>*@
            <div class="extra_option">
                @if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <span title="@T("ShoppingCart.AddToCompareList")" class="lnr lnr-sync" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;"></span>
                    @*<input type="button" value="@T("ShoppingCart.AddToCompareList")" title="@T("ShoppingCart.AddToCompareList")" class="button-2 add-to-compare-list-button" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;" />*@
                }
                @if (!Model.ProductPrice.DisableWishlistButton)
                {
                    <span title="@T("ShoppingCart.AddToWishlist")" class="lnr lnr-heart" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;"></span>
                    @*<input type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;" />*@
                }
            </div>
        </div>
    </div>
</div>

